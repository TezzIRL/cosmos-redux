#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define MAC     1
#define LOWER   2
#define RAISE   3
#define ADJUST  4

#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key)   LS(LC(LA(key)))

&sl { release-after-ms = <5000>; };

&kscan0 {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp ESC     &kp N1  &kp N2     &kp N3        &kp N4  &kp N5                                                                 &kp N6  &kp N7  &kp N8     &kp N9     &kp N0         &kp MINUS
&kp GRAVE   &kp Q   &kp W      &kp E         &kp R   &kp T                                                                  &kp Y   &kp U   &kp I      &kp O      &kp P          &kp EQUAL
&kp TAB     &kp A   &kp S      &kp D         &kp F   &kp G                                                                  &kp H   &kp J   &kp K      &kp L      &kp SEMICOLON  &kp SQT
&kp LSHIFT  &kp Z   &kp X      &kp C         &kp V   &kp B                                                                  &kp N   &kp M   &kp COMMA  &kp DOT    &kp FSLH       &kp RIGHT_SHIFT
                    &kp LCTRL  &kp LEFT_ALT          &lt 4 LGUI  &kp SPACE    &kp ENTER        &kp ENTER   &kp SPACE        &tog 2          &kp RALT   &kp RCTRL
                                                                 &lt 3 PG_UP  &kp BACKSPACE    &kp DELETE  &lt 1 PAGE_DOWN
            >;
        };

        function {
            bindings = <
&kp ESC          &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_UP                                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &none
&kp PRINTSCREEN  &kp F9      &kp F10   &kp F11     &kp F12     &kp C_VOL_DN                                    &none         &none         &none         &none           &none         &none
&kp SCROLLLOCK   &kp F5      &kp F6    &kp F7      &kp F8      &none                                           &none         &kp RSHFT     &kp RALT      &kp RGUI        &kp RCTRL     &none
&kp PAUSE_BREAK  &kp F1      &kp F2    &kp F3      &kp F4      &none                                           &none         &none         &none         &none           &none         &none
                             &trans    &trans                  &trans        &trans  &trans    &trans  &trans  &trans                      &bt BT_CLR    &bt BT_CLR_ALL
                                                                             &trans  &trans    &trans  &trans
            >;
        };

        symb-num {
            bindings = <
&kp TILDE  &kp LBKT        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RBKT          &kp QUESTION                                                 &kp KP_NUMLOCK    &kp KP_NUMBER_7  &kp KP_N8        &kp KP_N9         &kp KP_DIVIDE    &kp PERCENT
&kp SLASH  &kp LEFT_BRACE  &kp GRAVE             &kp SQT                &kp RIGHT_BRACE   &kp AT_SIGN                                                  &kp LESS_THAN     &kp KP_N4        &kp KP_N5        &kp KP_N6         &kp KP_MULTIPLY  &kp CARET
&kp POUND  &kp CARET       &kp DQT               &kp UNDER              &kp DOLLAR        &kp PERCENT                                                  &kp GREATER_THAN  &kp KP_N1        &kp KP_NUMBER_2  &kp KP_N3         &kp KP_MINUS     &kp LEFT_PARENTHESIS
&kp EXCL   &kp LESS_THAN   &kp MINUS             &kp EQUAL              &kp GREATER_THAN  &kp PLUS                                                     &kp EQUAL         &kp KP_N0        &kp KP_DOT       &kp LS(KP_ENTER)  &kp KP_PLUS      &kp RIGHT_PARENTHESIS
                           &kp AMPERSAND         &kp PIPE                                 &kp BSLH      &kp COLON     &kp SEMICOLON    &trans  &trans  &tog 0                             &trans           &trans
                                                                                                        &kp ASTERISK  &kp PERIOD       &trans  &trans
            >;
        };

        short_nav {
            bindings = <
&kp LG(LS(S))  &kp LG(LC(V))  &none      &none      &kp LC(LS(ESCAPE))  &kp LA(F4)                                                      &kp INSERT   &kp LC(HOME)  &kp HOME   &kp PG_UP      &kp LC(PG_UP)  &none
&none          &none          &kp LC(V)  &kp LC(X)  &kp LC(C)           &none                                                           &kp LG(TAB)  &kp LC(END)   &kp END    &kp PG_DN      &kp LC(PG_DN)  &kp LG(LC(D))
&caps_word     &kp LCTRL      &kp LGUI   &kp LALT   &kp LSHIFT          &none                                                           &kp LA(TAB)  &kp LC(LEFT)  &kp UP     &kp LC(RIGHT)  &kp LG(PG_UP)  &kp LG(LC(LEFT))
&none          &none          &none      &none      &kp LC(F)           &none                                                           &kp TAB      &kp LEFT      &kp DOWN   &kp RIGHT      &kp LG(PG_DN)  &kp LG(LC(RIGHT))
                              &trans     &trans                         &trans      &trans  &trans    &kp LC(DEL)        &kp DEL        &trans                     &kp LC(Z)  &kp LC(Y)
                                                                                    &trans  &trans    &kp LC(BACKSPACE)  &kp BACKSPACE
            >;
        };

        reset_rgb {
            bindings = <
&bootloader  &none  &none   &none   &none  &none                                     &none   &none  &none   &none   &none  &bootloader
&sys_reset   &none  &none   &none   &none  &none                                     &none   &none  &none   &none   &none  &sys_reset
&none        &none  &none   &none   &none  &none                                     &none   &none  &none   &none   &none  &none
&none        &none  &none   &none   &none  &none                                     &none   &none  &none   &none   &none  &none
                    &trans  &trans         &trans  &trans  &trans    &trans  &trans  &trans         &trans  &trans
                                                   &trans  &trans    &trans  &trans
            >;
        };
    };
};
